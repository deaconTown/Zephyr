# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main
- develop
- release/*

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'd4bd1e91-d4f9-4db0-86b2-2ae3ccafa7a4'
  frontendImageRepository: 'zephyr'
  backendImageRepository: 'zephyr'
  containerRegistry: 'devdockerreg01.azurecr.io'
  bdockerfilePath: '**/backend/Dockerfile'
  fdockerfilePath: '**/frontend/Dockerfile'
  tag: '$(Build.BuildId)'

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: |
    cd app/frontend
    npm install
  displayName: 'npm install'

- script: |
    npm run build
  displayName: 'npm build'

- script: |
    cd app/backend
    npm install
  displayName: 'npm install'

- script: |
    npm run build
  displayName: 'npm build'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/apps/frontend/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/frontend/frontend.zip'
    replaceExistingArchive: true
  displayName: 'Archive Build Artifacts'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/apps/backend/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/backend/backend.zip'
    replaceExistingArchive: true
  displayName: 'Archive Build Artifacts'

- task: Docker@2
  displayName: Build and push an image to container registry for frontend
  inputs:
    command: buildAndPush
    repository: $(frontendImageRepository)
    dockerfile: $(fdockerfilePath)
    containerRegistry: $(dockerRegistryServiceConnection)
    tags: |
      $(tag)



- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/backend'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Docker@2
  displayName: Build and push an image to container registry for backend
  inputs:
    command: buildAndPush
    repository: $(backendImageRepository)
    dockerfile: $(bdockerfilePath)
    containerRegistry: $(dockerRegistryServiceConnection)
    tags: |
      $(tag)